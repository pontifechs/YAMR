{
  "url" : "http://www.mangapanda.com/alphabetical",
  "name" : "MangaPanda",
  "newUrl" : "http://www.mangapanda.com/latest",
  "fetchProvider" : [
    "function fetchProvider(doc, provider) {",
    "   return doc.select('.series_alpha li a[href]');",
    "};"
  ],
  "stubSeries" : [
    "function stubSeries(element) {",
    "   var jsSeries = new JsSeries();",
    "   jsSeries.url = element.absUrl('href');",
    "   jsSeries.name = element.ownText();",
    "   return jsSeries;",
    "};"
  ],
  "fetchSeries" : [
    "function fetchSeries(doc, series) {",
    "   var thumb = doc.select('#mangaimg img[src]').first();",
    "   series.thumbnailUrl = thumb.absUrl('src');",
    "",
    "   var summary = doc.select('#readmangasum p').first();",
    "   series.description = summary.text();",
    "",
    "   var properties = doc.select('.propertytitle');",
    "   for each(var property in properties.toArray()) {",
    "       var propTitle = property.text();",
    "       var sibling = property.parent().select('td:eq(1)').first();",
    "       switch (propTitle) {",
    "           case 'Alternate Name:':",
    "               series.alternateName = sibling.text();",
    "               break;",
    "           case 'Status:':",
    "               series.complete = sibling.text() !== 'Ongoing';",
    "               break;",
    "           case 'Author:':",
    "               series.author= sibling.text();",
    "               break;",
    "           case 'Artist:':",
    "               series.artist= sibling.text();",
    "               break;",
    "           case 'Genre:':",
    "               break;",
    "       }",
    "   }",
    "   return doc.select('td .chico_manga ~ a[href]');",
    "};"
  ],
  "fetchSeriesGenres" : [
    "function fetchSeriesGenres(doc, series) {",
    "   var genreElements = doc.select('.genretags');",
    "   var genres = [];",
    "   for each (var genre in genreElements.toArray()) {",
    "       genres.push(genre.text());",
    "   }",
    "   return genres;",
    "};"
  ],
  "stubChapter" : [
    "function stubChapter(element) {",
    "   var jsChapter = new JsChapter();",
    "   jsChapter.url = element.absUrl('href');",
    "   jsChapter.name = element.parent().ownText().replace(':', '');",
    "   var number = element.text();",
    "   jsChapter.number = parseFloat(number.substring(number.lastIndexOf(' ')));",
    "   return jsChapter;",
    "};"
  ],
  "fetchChapter" : [
    "function fetchChapter(doc, chapter) {",
    "   return doc.select('#pageMenu option[value]');",
    "};"
  ],
  "stubPage" : [
    "function stubPage(element) {",
    "   var page = new JsPage();",
    "   page.url = element.absUrl('value');",
    "   page.number = parseFloat(element.text());",
    "   return page;",
    "};"
  ],
  "fetchPage" : [
    "function fetchPage(doc, page) {",
    "   return doc.select('img[src]').first().absUrl('src');",
    "};"
  ],
  "fetchNew" : [
    "function fetchNew(doc) {",
    "   var ret = [];",
    "   var rows = doc.select('.c2');",
    "   for each (var row in rows.toArray()) {",
    "       var seriesElement = row.select('.chapter').first();",
    "       var series = new JsSeries();",
    "       series.name = seriesElement.text();",
    "       series.url = seriesElement.absUrl('href');",
    "       ",
    "       var chapters = row.select('.chaptersrec');",
    "       for each (var chapterElement in chapters.toArray()) {",
    "           var chapter = new JsChapter();",
    "           chapter.number= chapterElement.text().replace(series.name, '');",
    "           chapter.url = chapterElement.absUrl('href');",
    "           ret.push([series, chapter]);",
    "       }",
    "   }",
    "   return ret;",
    "};"
  ]
}
